This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
items/
  left/
    aerospace_scratchpad.sh
    aerospace_workspaces.sh
    apple.sh
  right/
    battery.sh
    clock.sh
    ram.sh
plugins/
  left/
    aerospace_scratchpad.sh
    aerospace_workspaces.sh
    refresh_workspaces.sh
  right/
    battery.sh
    cpu.sh
    ram.sh
    volume.sh
  clock.sh
  front_app.sh
  space.sh
colors.sh
icons.sh
settings.sh
sketchybarrc
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="items/left/aerospace_scratchpad.sh">
#!/usr/bin/env bash

scratchpad=(
    "${left_items_common[@]}"
    background.padding_right=2
    icon="Û∞ñ≤"  # floating window icon
    icon.y_offset=2.5
    label=0
    update_freq=0
    icon.color=0xff6272a4
    label.color=0xffbd93f9
    script="$PLUGIN_DIR/left/aerospace_scratchpad.sh"
    click_script="aerospace workspace NSP"
)

sketchybar --add event scratchpad_update \
    --add item scratchpad left \
    --set scratchpad "${scratchpad[@]}" \
    --subscribe scratchpad mouse.entered mouse.exited mouse.exited.global mouse.clicked scratchpad_update
</file>

<file path="items/left/aerospace_workspaces.sh">
#!/usr/bin/env bash

# Create workspace items for 1-9 (no individual scripts)
for i in {1..9}; do
    sketchybar --add item workspace.$i left \
        --set workspace.$i \
        label="$i:0" \
        label.font="$LABEL_FONT" \
        label.color="$WS_DEFAULT_COLOR" \
        icon.drawing=off \
        click_script="aerospace workspace $i" \
        drawing=off
done

# Single monitor that updates everything
sketchybar --add item workspace_monitor left \
    --set workspace_monitor \
    drawing=off \
    update_freq=3 \
    script="$PLUGIN_DIR/left/aerospace_workplaces.sh" \
    --subscribe workspace_monitor workspace_change
</file>

<file path="items/left/apple.sh">
POPUP_OFF="sketchybar --set apple.logo popup.drawing=off"
POPUP_CLICK_SCRIPT="sketchybar --set \$NAME popup.drawing=toggle"

popup_props=(
    popup.height=30
)
apple_logo=(
    "${left_items_common[@]}"
    "${popup_props[@]}"
    icon="$APPLE"
    icon.color="$RED"
    icon.font.size=18
    label.drawing=off
    icon.y_offset=2
    click_script="$POPUP_CLICK_SCRIPT"
)
pupup_item=(
    # icon.padding_left=6
    icon.padding_right=6
    # label.padding_left=0
    # label.padding_right=6
    background.padding_right=10
    background.padding_left=10
    background.drawing=off
)

sketchybar --add item apple.logo left \
    --set apple.logo "${apple_logo[@]}" \
    \
    --add item apple.prefs popup.apple.logo \
    --set apple.prefs "${pupup_item[@]}" \
    icon="$PREFERENCES" \
    label="Preferences" \
    icon.color="$WHITE" \
    label.color="$WHITE" \
    click_script="open -a 'System Preferences' ; $POPUP_OFF" \
    \
    --add item apple.activity popup.apple.logo \
    --set apple.activity "${pupup_item[@]}" \
    icon="$ACTIVITY" \
    label="Activity" \
    icon.color="$WHITE" \
    label.color="$WHITE" \
    click_script="open -a 'Activity Monitor' ; $POPUP_OFF" \
    \
    --add item apple.lock popup.apple.logo \
    --set apple.lock "${pupup_item[@]}" \
    icon="$LOCK" \
    label="Lock Screen" \
    icon.color="$WHITE" \
    label.color="$WHITE" \
    click_script="pmset displaysleepnow ; $POPUP_OFF"
</file>

<file path="items/right/battery.sh">
battery=(
    "${right_items_common[@]}"
    update_freq=120
    icon.color="$BATTERY_ICON_COLOR"
    icon.y_offset=2
    icon.font.size=19
    script="$PLUGIN_DIR/right/battery.sh"
    click_script="open \"x-apple.systempreferences:com.apple.Battery-Settings.extension\""
    display=1
)

sketchybar --add item battery right \
    --set battery "${battery[@]}" \
    --subscribe battery system_woke power_source_change
</file>

<file path="items/right/clock.sh">
#!/usr/bin/env bash

clock=(
    update_freq=10
    icon="$CLOCK"
    icon.color="$CLOCK_ICON_COLOR"
    label.color="$CLOCK_LABEL_COLOR"
    script="$PLUGIN_DIR/clock.sh"
    click_script="open -a Clock"
)

sketchybar --add item clock right \
    --set clock "${clock[@]}"
</file>

<file path="items/right/ram.sh">
ram=(
    "${right_items_common[@]}"
    icon="$SYSTEM_RAM"
    icon.color="$RAM_ICON_COLOR"
    update_freq=10
    script="$PLUGIN_DIR/right/ram.sh"
    click_script="$SCRIPTS_DIR/run_external_bash.sh '/opt/homebrew/bin/btop && exit'"
    display=1
)

sketchybar --add item ram right \
    --set ram "${ram[@]}"
</file>

<file path="plugins/left/aerospace_scratchpad.sh">
#!/usr/bin/env bash

source "$CONFIG_DIR/colors.sh"
source "$CONFIG_DIR/settings.sh"

function load_scratchpad_info() {
    SCRATCHPAD_APPS=$(aerospace list-windows --workspace "NSP" 2>/dev/null)
    SCRATCHPAD_COUNT=$(echo "$SCRATCHPAD_APPS" | grep -v '^$' | wc -l | awk '{print $1}')
}

function refresh() {
    load_scratchpad_info

    if [ -z "$SCRATCHPAD_APPS" ]; then
        return
    fi

    args=(--remove '/scratchpad.popup\.*/' )

    local counter=0
    while IFS='|' read -r id label rest; do
        # trim leading/trailing spaces
        label="${label#"${label%%[![:space:]]*}"}"
        label="${label%"${label##*[![:space:]]}"}"

        # Get icon for the application
        icon=$(get_app_icon "$label")

        args+=(
            --add item "$NAME".popup."$counter" popup."$NAME"
            --set "$NAME".popup."$counter" \
            label="$label" \
            icon="$icon" \
            icon.padding_right=6 \
            label.color=0xff82aaff \
            background.padding_right=10 \
            background.padding_left=10 \
            background.drawing=off
        )
        counter=$((counter + 1))

    done <<< "$SCRATCHPAD_APPS"

    sketchybar -m "${args[@]}" >/dev/null
}

function get_app_icon() {
    case "$1" in
        "kitty") echo "üê±" ;;
        "Terminal") echo "üíª" ;;
        "Google Chrome" | "Brave Browser") echo "üåê" ;;
        "Discord") echo "üí¨" ;;
        "Slack") echo "üíº" ;;
        "Code" | "Visual Studio Code") echo "üìù" ;;
        *) echo "üì±" ;;
    esac
}

function popup() {
    sketchybar --set "$NAME" popup.drawing="$1"
}

case "$SENDER" in
    "mouse.entered")
        popup on
        exit 0
        ;;
    "mouse.exited" | "mouse.exited.global" | "mouse.clicked")
        popup off
        exit 0
        ;;
    *)
        refresh
        ;;
esac

if [ -z "$SCRATCHPAD_COUNT" ]; then
    load_scratchpad_info
fi

sketchybar --set "$NAME" label="$SCRATCHPAD_COUNT"
</file>

<file path="plugins/left/aerospace_workspaces.sh">
#!/usr/bin/env bash

source "$CONFIG_DIR/colors.sh"

# Get current focused workspace
FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)

# Check all workspaces 1-9 and update them
for WORKSPACE_ID in {1..9}; do
    # Count windows in this workspace
    WINDOW_COUNT=$(aerospace list-windows --workspace "$WORKSPACE_ID" 2>/dev/null | wc -l | awk '{print $1}')
    
    # Format label as "workspace:count"
    LABEL="$WORKSPACE_ID:$WINDOW_COUNT"
    
    # Only show workspaces that have windows
    if [ "$WINDOW_COUNT" -gt 0 ]; then
        # Workspace has windows - show it
        if [ "$WORKSPACE_ID" = "$FOCUSED_WORKSPACE" ]; then
            # This is the active workspace with windows
            sketchybar --set workspace.$WORKSPACE_ID \
                label="$LABEL" \
                label.color="$WS_ACTIVE_LABEL_COLOR" \
                background.color="$WS_ACTIVE_BG_COLOR" \
                background.drawing=on \
                drawing=on
        else
            # Inactive workspace with windows
            sketchybar --set workspace.$WORKSPACE_ID \
                label="$LABEL" \
                label.color="$WS_WIHT_CLIENTS_LABEL_COLOR" \
                background.color="$WS_WIHT_CLIENTS_BG_COLOR" \
                background.drawing=on \
                drawing=on
        fi
    else
        # No windows - hide the workspace
        sketchybar --set workspace.$WORKSPACE_ID \
            drawing=off
    fi
done
</file>

<file path="plugins/left/refresh_workspaces.sh">
#!/usr/bin/env bash

# This script refreshes all workspace indicators
# It will automatically show workspaces that have windows

for i in {1..9}; do
    "$CONFIG_DIR/plugins/left/aerospace_workspaces.sh" "$i"
done
</file>

<file path="plugins/right/battery.sh">
#!/usr/bin/env bash

BATTERY_INFO="$(pmset -g batt)"
PERCENTAGE=$(echo "$BATTERY_INFO" | grep -Eo "\d+%" | cut -d% -f1)
CHARGING=$(echo "$BATTERY_INFO" | grep 'AC Power')

if [ "$PERCENTAGE" = "" ]; then
    exit 0
fi

source "$CONFIG_DIR/icons.sh"

case "${PERCENTAGE}" in
    9[0-9]|100) ICON="$BATTERY_100" ;;
    [6-8][0-9]) ICON="$BATTERY_75" ;;
    [3-5][0-9]) ICON="$BATTERY_50" ;;
    [1-2][0-9]) ICON="$BATTERY_25" ;;
    *) ICON="$BATTERY_0"
esac

if [[ "$CHARGING" != "" ]]; then
    ICON="$BATTERY_CHARGING"
fi

sketchybar --set "$NAME" icon="$ICON" label="${PERCENTAGE}%"
</file>

<file path="plugins/right/cpu.sh">
#!/usr/bin/env bash

if [[ "$SENDER" == "mouse."* ]]; then
    case "$SENDER" in
        "mouse.clicked")
            # echo "sender: $SENDER, button: $BUTTON, modifier: $MODIFIER, scroll_delta: $SCROLL_DELTA" > /tmp/logs.txt
            case "$BUTTON" in
                "left")
                    "$CONFIG_DIR"/scripts/run_external_bash.sh '/opt/homebrew/bin/btop && exit'
                    ;;
                "right")
                    open -a "Activity Monitor"
                    ;;
            esac
            ;;
    esac
fi

# Get CPU usage percentage
CPU_USAGE=$(top -l 1 -n 0 | grep "CPU usage" | awk '{print $3}' | sed 's/%//')

# Handle empty CPU usage
if [[ -z "$CPU_USAGE" ]]; then
    CPU_USAGE=0
fi

# Remove decimal point for comparison
CPU_INT=${CPU_USAGE%.*}

## Set icon and color based on CPU usage
# source "$CONFIG_DIR/colors.sh"
# if [[ $CPU_INT -le 25 ]]; then
#     COLOR=$ACCENT_SECONDARY  # Green
# elif [[ $CPU_INT -le 50 ]]; then
#     COLOR=$ACCENT_PRIMARY  # Blue
# elif [[ $CPU_INT -le 75 ]]; then
#     COLOR=$ACCENT_TERTIARY  # Orange
# else
#     COLOR=$RED  # Red
# fi
CPU_INT_FORMATTED=$(printf "%02d" "$CPU_INT")
sketchybar --set "$NAME" label="$CPU_INT_FORMATTED%"
</file>

<file path="plugins/right/ram.sh">
#!/usr/bin/env bash

LABEL=$(memory_pressure | grep "System-wide memory free percentage:" | awk '{print 100-$5"%"}')
sketchybar --set "$NAME" label="$LABEL"
</file>

<file path="plugins/right/volume.sh">
#!/bin/sh

# The volume_change event supplies a $INFO variable in which the current volume
# percentage is passed to the script.

if [ "$SENDER" = "volume_change" ]; then
  VOLUME="$INFO"

  case "$VOLUME" in
    [6-9][0-9]|100) ICON="Û∞ïæ"
    ;;
    [3-5][0-9]) ICON="Û∞ñÄ"
    ;;
    [1-9]|[1-2][0-9]) ICON="Û∞ïø"
    ;;
    *) ICON="Û∞ñÅ"
  esac

  sketchybar --set "$NAME" icon="$ICON" label="$VOLUME%"
fi
</file>

<file path="plugins/clock.sh">
#!/bin/sh

# The $NAME variable is passed from sketchybar and holds the name of
# the item invoking this script:
# https://felixkratz.github.io/SketchyBar/config/events#events-and-scripting

sketchybar --set "$NAME" label="$(date '+%d/%m %H:%M')"
</file>

<file path="plugins/front_app.sh">
#!/bin/sh

# Some events send additional information specific to the event in the $INFO
# variable. E.g. the front_app_switched event sends the name of the newly
# focused application in the $INFO variable:
# https://felixkratz.github.io/SketchyBar/config/events#events-and-scripting

if [ "$SENDER" = "front_app_switched" ]; then
  sketchybar --set "$NAME" label="$INFO"
fi
</file>

<file path="plugins/space.sh">
#!/bin/sh

# The $SELECTED variable is available for space components and indicates if
# the space invoking this script (with name: $NAME) is currently selected:
# https://felixkratz.github.io/SketchyBar/config/components#space----associate-mission-control-spaces-with-an-item

sketchybar --set "$NAME" background.drawing="$SELECTED"
</file>

<file path="colors.sh">
#!/usr/bin/env bash

############################################
# Named Colors

WHITE=0xFFCAD3F5
RED=0xFFF38BA8
BLACK=0xff212634
# WHITE=0xfff8fdfa
GREEN=0xffa6da95
BLUE=0xff8aadf4
YELLOW=0xffd6af7c
ORANGE=0xfff5a97f
MAGENTA=0xffc6a0f6
GREY=0xff6c7086
LIGHT_GREY=0xffc3c7d1
DARK_GREY=0xff232634

############################################
# Accent Colors

ACCENT_PRIMARY=0xff82aaff
ACCENT_SECONDARY=0xffb9f27c
ACCENT_TERTIARY=0xffff966c
ACCENT_QUATERNARY=0xffc792ea
ACCENT_PINK=0xffff79c6

############################################
# Default Colors

DEFAULT_LABEL_COLOR=0xff6272a4
DEFAULT_ICON_COLOR=0xff94928F
DEFAULT_BACKGROUND_COLOR=0x00000000
DEFAULT_BAR_COLOR=0xff1e1e2e # 0xff232634  0x40232634

############################################
# Items Colors

WIFI_ICON_COLOR=0xff4db5bd

BLUETOOTH_OFF_ICON_COLOR=0xFF9399B2
BLUETOOTH_ON_ICON_COLOR="$ACCENT_PRIMARY"

BREW_ICON_COLOR=0xff8aadf4

PLAYER_LABLE_COLOR=0xff5699af
PLAYER_PLAY_ICON_COLOR=0xffc678dd
PLAYER_PAUSE_ICON_COLOR=0xff98be65
PLAYER_STOP_ICON_COLOR=0xffFC9867

MIC_ICON_COLOR=0xff5699af
VOLUME_ICON_COLOR=0xffca9ee6

RAM_ICON_COLOR=0xffa6e3a1
DISK_ICON_COLOR=0xffe5c890
CPU_ICON_COLOR=0xff8caaee
BATTERY_ICON_COLOR=0xffa6e3a1

INPUT_LABEL_COLOR=0xffbc99ed

CLOCK_ICON_COLOR=0xffbd93f9
CLOCK_LABEL_COLOR=0xff8caaee

DATE_ICON_COLOR=0xff7c8377
DATE_LABEL_COLOR=0xff6272a4

SCRATCHPAD_ICON_COLOR=0xff6272a4
SCRATCHPAD_LABEL_COLOR=0xffbd93f9

FRONT_APP_LABEL_COLOR=0xff928374
FRONT_APP_ICON_COLOR=0xff81A1C1 # "0xff5699af"

############################################
# Runners Colors

RUNNER_SETTINGS_ICON_COLOR=0xff3071db
RUNNER_KITTY_ICON_COLOR=0xff89dceb
RUNNER_GHOSTTY_ICON_COLOR=0xffc3c7d1
RUNNER_WEZTERM_ICON_COLOR=0xff4E49EE
RUNNER_BRAVE_BROWSER_ICON_COLOR=0xfff38ba8
RUNNER_IDEA_ICON_COLOR=0xff8caaee

############################################
# Workspace Colors

WS_DEFAULT_BG_COLOR=0x44ffffff
WS_DEFAULT_COLOR=0xff51576d
WS_ACTIVE_ICON_COLOR=0xffa6d189
WS_ACTIVE_LABEL_COLOR=0xffa6d189
WS_ACTIVE_BG_COLOR=0xff44475a
WS_ACTIVE_ANOTHER_DISPLAY_ICON_COLOR="$WS_DEFAULT_COLOR"     # 0xffbd93f9
WS_ACTIVE_ANOTHER_DISPLAY_LABEL_COLOR="$WS_DEFAULT_COLOR"    # 0xffbd93f9
WS_ACTIVE_ANOTHER_DISPLAY_BG_COLOR=0xff83a598                # 0xffb8bb26
WS_WIHT_CLIENTS_ICON_COLOR="$WS_DEFAULT_COLOR"               # 0xff83a598
WS_WIHT_CLIENTS_LABEL_COLOR="$WS_DEFAULT_COLOR"
WS_WIHT_CLIENTS_BG_COLOR="$WS_DEFAULT_COLOR"

############################################
# Popup Colors

POPUP_BORDER_COLOR=0xff82aaff
POPUP_BACKGROUND_COLOR=0x603C3E4F
</file>

<file path="icons.sh">
#!/usr/bin/env bash

# General Icons
LOADING="?? "
APPLE="Óúë"
PREFERENCES="?? "
ACTIVITY="?? "
LOCK="?? "
BELL="?? "
BELL_DOT="?? "
BLUETOOTH="? "
RESTART="? "
CLOCK="Ôê∫" CALENDAR="? "
KEYBOARD="?? "
QUESTION="?"
USB="? "

# Git Icons
GIT_ISSUE="?? "
GIT_DISCUSSION="?? "
GIT_PULL_REQUEST="?? "
GIT_COMMIT="?? "
GIT_INDICATOR="?? "

# Music Control Icons
PLAYER_PLAY="? " # "?? "
PLAYER_PAUSE="? " #"?? "
PLAYER_STOP="? " # "?? "
PLAYER_SHUFFLE="?? "
PLAYER_REPEAT="?? " # "? "

# Window Icons
WINDOW_STACK="?? "
WINDOW_FULLSCREEN_ZOOM="?? "
WINDOW_PARENT_ZOOM="?? "
WINDOW_FLOAT="?? " # "? "
WINDOW_GRID="?? "

# Battery Icons
BATTERY_100="ÔâÄ"
BATTERY_75="ÔâÅ"
BATTERY_50="ÔâÇ"
BATTERY_25="ÔâÉ"
BATTERY_0="ÔâÑ"
BATTERY_CHARGING="Û∞ÇÑ"

# Volume Icons
VOLUME_100="?? "
VOLUME_66="?? "
VOLUME_33="?? "
VOLUME_10="?? "
VOLUME_0="?? "
AIRPODS="?? "
HEADPHONES="?? "

VOL_DEVICE_INTERNAL="??"
VOL_DEVICE_EX_MONITOR="??"
VOL_DEVICE_EX_HEADPHONES="??"
VOL_DEVICE_EX_DAC="??"

MICROPHONE_ON="? " # "?? "
MICROPHONE_OFF="? " # "?? "
MICROPHONE_DEVICE_EXTERNAL="??" # "??" "??" "??" "??"
MICROPHONE_DEVICE_INTERNAL="??"

BLUETOOTH_ON="??"
BLUETOOTH_OFF="??"

EYE_ON="?? "
EYE_OFF="?? "

INPUT_FLAG_UA="????"
INPUT_FLAG_ABC="????"

PACKAGES_SYNC="?? " # "?? "
PACKAGES_SYNC_OK="? " # "?? "

FRONT_APP_SEPARATOR="?"

# WiFi
WIFI_CONNECTED="?? " # "?? " "?? "
WIFI_DISCONNECTED="?? " #"?? " "?? "
ETHERNET_CONNECTED="??"

# System Icons
SYSTEM_RAM="ÓøÖ" # ?
SYSTEM_DISK=""
SYSTEM_CPU="Û∞ª†" # "? "

# Runners Icons
RUNNER_SETTINGS="? " # "?? "
RUNNER_UPDATES="? "

# Svim Icons
MODE_NORMAL="?? "
MODE_INSERT="?? "
MODE_VISUAL="?? "
MODE_CMD="?? "
MODE_PENDING="?? "

# Aerospace Workspace Icons
declare -A WS_ICONS
WS_ICONS["1"]="? "
WS_ICONS["2"]="? "
WS_ICONS["3"]="? "
WS_ICONS["4"]="?? "
WS_ICONS["5"]="? "
WS_ICONS["6"]="?? "
WS_ICONS["7"]="? "
WS_ICONS["8"]="? "
WS_ICONS["9"]="? "
</file>

<file path="settings.sh">
#!/usr/bin/env bash

ICON_FONT="Hack Nerd Font:Regular:14.0"
ICON_APP_FONT="Hack Nerd Font:Regular:12.0"
LABEL_FONT="Hack Nerd Font:Bold:14.0"

right_items_common=(
    icon.padding_left=6
    icon.padding_right=5
    label.padding_left=0
    label.padding_right=6
    background.padding_right=2
    #background.padding_left=0
)

left_items_common=(
    icon.padding_left=6
    icon.padding_right=5
    label.padding_left=0
    label.padding_right=6
    #background.padding_right=2
    background.padding_left=2
)

center_items_common=(
    icon.padding_left=10
    icon.padding_right=5
    label.padding_left=0
    label.padding_right=10
)

popup_events=(
    mouse.entered
    mouse.exited
    mouse.exited.global
)

popup() {
    sketchybar --set "$NAME" popup.drawing="$1"
}
</file>

<file path="sketchybarrc">
#!/usr/bin/env bash

PLUGIN_DIR="$CONFIG_DIR/plugins"
ITEM_DIR="$CONFIG_DIR/items"
SCRIPTS_DIR="$CONFIG_DIR/scripts"

# Source configuration files
source "$CONFIG_DIR/colors.sh"
source "$CONFIG_DIR/icons.sh"
source "$CONFIG_DIR/settings.sh"

# Configure the bar
sketchybar --bar position=top \
    height=30 \
    blur_radius=25 \
    color="$DEFAULT_BAR_COLOR" \
    padding_left=10 \
    padding_right=10

# Set default properties for all items
default=(
    padding_left=5
    padding_right=5
    icon.font="$ICON_FONT"
    label.font="$LABEL_FONT"
    icon.color="$DEFAULT_ICON_COLOR"
    label.color="$DEFAULT_LABEL_COLOR"
    label.y_offset=1
    icon.y_offset=1

    background.height=22
    background.corner_radius=2
    background.color="$DEFAULT_BACKGROUND_COLOR"
    background.y_offset=1
    background.padding_left=0
    background.padding_right=0
    background.border_width=0

    popup.background.border_width=2
    popup.background.corner_radius=9
    popup.background.border_color="$POPUP_BORDER_COLOR"
    popup.background.color="$POPUP_BACKGROUND_COLOR"
    popup.blur_radius=20
    popup.background.shadow.drawing=on

    scroll_texts=on
)
sketchybar --default "${default[@]}"

##### Adding Left Items #####
source "$ITEM_DIR/left/apple.sh"
source "$ITEM_DIR/left/aerospace_workspaces.sh"

##### Adding Right Items #####
source "$ITEM_DIR/right/clock.sh"
source "$ITEM_DIR/right/battery.sh"
source "$ITEM_DIR/right/ram.sh"

# Add other items here as needed...

sketchybar --hotload on
sketchybar --update
</file>

</files>
